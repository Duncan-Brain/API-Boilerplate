name: Test And Deploy

on:
  push:
    branches:
      - master

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Build And Test Frontend
        run: |
          docker build -t temp-image -f ./frontend/Dockerfile.dev ./frontend
          docker run temp-image npm test -- --coverage

  deploy-docker:
    needs: [test-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login To Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Push Frontend Image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.next
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/boiler-api-frontend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/boiler-api-frontend:${{ github.sha }}

      - name: Build Push API Image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/boiler-api-api:latest,${{ secrets.DOCKER_HUB_USERNAME }}/boiler-api-api:${{ github.sha }}

  deploy-do-kubernetes:
    needs: [test-frontend, deploy-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Download Kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.20.0/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Download Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Setup Kubeconfig
        env:
          PASSPHRASE: ${{ secrets.DECRYPT_PASSPHRASE }}
        run: |
          mkdir $HOME/.kube
          gpg --quiet --batch --yes --decrypt --passphrase "$PASSPHRASE" --output $HOME/.kube/config github-actions-sa.gpg
          chmod 600 $HOME/.kube/config
          kubectl config set-context --current --user=github-actions

      - name: Add Docker Secret
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_EMAIL: ${{ secrets.DOCKER_HUB_EMAIL }}
        run: |
          kubectl --kubeconfig=$HOME/.kube/config create secret docker-registry regcred --docker-server=https://index.docker.io/v2/ --docker-username="$DOCKER_USERNAME" --docker-password="$DOCKER_TOKEN" --docker-email="$DOCKER_EMAIL"

      - name: Try to Install Ingress Nginx On Digital Ocean Cluster
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx

      - name: Deploy App To Cluster
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          kubectl --kubeconfig=$HOME/.kube/config apply -f k8s
          kubectl --kubeconfig=$HOME/.kube/config set image deployment/frontend-deployment frontend="$DOCKER_USERNAME"/boiler-api-frontend:${{ github.sha }}
          kubectl --kubeconfig=$HOME/.kube/config set image deployment/api-deployment api="$DOCKER_USERNAME"/boiler-api-api:${{ github.sha }}
